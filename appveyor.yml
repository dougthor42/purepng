environment:
  matrix:

    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python27-x64"
    - PYTHON: "C:\\Python33"
    - PYTHON: "C:\\Python33-x64"
    - PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python34-x64"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python36-x64"

install:
  # Check that we have the expected version and architecture for Python
  - "%PYTHON%\\python.exe -c \"import sys; print(sys.version)"
  - "%PYTHON%\\python.exe -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Make sure packaging things are up to date.
  - "%PYTHON%\\python.exe -m pip install --upgrade pip wheel setuptools"

  - "%PYTHON%\\python.exe -m pip install nose"
  - "%PYTHON%\\python.exe -m pip install argparse"

# Not a C# project, build stuff at the test step instead.
build: false

test_script:
  # run the project tests
  - "%PYTHON%\\python.exe -m nose test_png.py"

after_test:
  # If tests are successful, update coverage.
  - "SET CI_BRANCH=%APPVEYOR_REPO_BRANCH%"
  - "SET COVERALLS_PARALLEL=true"
  - "SET COVERALLS_REPO_TOKEN=w8NKB65QmekU0thmQV1E5yEaFpYIyUAYP"
  #- "if %py_minor% GEQ 6 %CMD_IN_ENV% coveralls"

  # create wheel package
  - "%PYTHON%\\python.exe setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*
